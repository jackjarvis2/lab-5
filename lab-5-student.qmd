---
title: "Lab 5: Murder in SQL City"
author: "Jack Jarvis"
format: html
editor: source
embed-resources: true
execute:  
  error: false
  warning: false
  echo: true
  message: false

---

For this lab, you will be joining and filtering related datasets to solve a murder mystery!

## Instructions

Northwestern University's Knight Lab wanted to help sharpen users' database skills, so they created a murder mystery. Can you solve this crime in SQL City??

The relational data you will be working with contains tables with different pieces of information pertinent to the crime - people, social media check-ins, driver's licenses, crime scene reports, police interviews, and more!

![Database schema](https://mystery.knightlab.com/schema.png)

Solve the murder mystery, showing **all of your work in this document**. Your document and code must be well organized, easy to follow, and reproducible.

+ Use headers and written descriptions to indicate what you are doing.
+ Use `dplyr` verbs and `join` functions rather than just looking through the tables manually.
+ Use good code formatting practices.
+ Comment your code.
+ Cite any external sources you use to solve the mystery.

### Tips 

You may find the `pull()` function handy for displaying each clue as you go along.


## Access the Data

This code chunk will read in all of the tables of data for you. Don't modify or remove this!

```{r}
#| message: false
#| warning: false
#| label: read-in-data

library(tidyverse)

# If purrr is not detected, install the package
if (!"purrr" %in% installed.packages()) install.packages("purrr")

source("https://raw.githubusercontent.com/atheobold/groupworthy-data-science/main/labs/instructions/lab-5-setup.R")
```

## Solve the Crime

### Crime Scene Report

Detective Wickham reaches out to you...

> A crime has taken place and I need your help! There was a murder in SQL City sometime on January 15, 2018. Could you retrieve the crime scene report from the police departmentâ€™s database and follow the clues to find the person responsible for the murder?!

```{r}
#| label: inspecting-crime-scene-report
# 1. Retrieve the crime scene report for the specified date and city
crime_scene_report_result <- crime_scene_report %>%
  filter(date == 20180115, city == 'SQL City', type == 'murder') %>%
  select(description)

print(crime_scene_report_result)

# 2. Find the last house on Northwestern Dr.
last_house_nw_dr <- person %>%
  filter(address_street_name == 'Northwestern Dr') %>%
  arrange(desc(address_number)) %>%
  slice(1) %>%
  select(id, name)

print(last_house_nw_dr)

# 3. Find Annabel on Franklin Ave.
annabel_info <- person %>%
  filter(address_street_name == 'Franklin Ave', str_detect(name, 'Annabel')) %>%
  select(id, name)

print(annabel_info)

# 4. Retrieve the interview transcripts for Morty and Annabel
interviews_result <- interview %>%
  filter(person_id %in% c(14887, 16371)) %>%
  select(transcript)

print(interviews_result)

# find the person based off of interview
murderer_info <- get_fit_now_member %>%
  inner_join(person, by = c("person_id" = "id")) %>%
  inner_join(drivers_license, by = c("license_id" = "id")) %>%
  filter(
    membership_status == 'gold',
    str_sub(id, 1, 3) == "48Z", 
    str_detect(plate_number, "H42W")
  ) %>%
  select(name = name.x)

print(murderer_info)

# Then I checked the interview with the person from the murderer info

# 6. THE MURDERER 
villain_info <- person %>%
  inner_join(facebook_event_checkin, by = c("id" = "person_id")) %>%
  inner_join(drivers_license, by = c("license_id" = "id")) %>%
  filter(
    event_name == 'SQL Symphony Concert',
    str_detect(date, '^201712'),
    car_make == 'Tesla', 
    car_model == 'Model S',
    height >= 65, height <= 67,
    hair_color == 'red',
    gender == 'female'
  ) %>%
  group_by(id) %>%
  filter(n() == 3) %>%
  select(name)

print(villain_info)
```


**Follow the evidence to the person responsible for the murder, building a report as you go.**
Hint: Make sure you check for interviews with any suspects!


## And the final suspect is...

Miranda Priestly is the murderer. 
